{"version":3,"sources":["components/Frontpage/Searchbar/Searchbar.js","components/Frontpage/ResultContainer/ResultContainer.js","components/Frontpage/Frontpage.js","components/Manage/Manage.js","App.js","index.js"],"names":["Searchbar","socket","useState","name","setName","city","setCity","country","setCountry","nroOfBeds","setNroOfBeds","price","setPrice","useEffect","data","emit","console","log","id","sendQueryData","className","placeholder","onChange","event","target","value","type","ResultContainer","resultData","setResultData","on","results","map","src","picture_url","alt","beds","summary","action","url","io","connect","Frontpage","to","Manage","setId","setBeds","setUrl","pictureUrl","setPictureUrl","inputs","onClick","valid","i","alert","window","location","reload","undefined","confirm","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27f968e9.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport './Searchbar.css';\r\n\r\nconst Searchbar = ({socket}) =>{\r\n\r\n    const [name, setName] = useState('');\r\n    const [city, setCity] = useState('');\r\n    const [country, setCountry] = useState('');\r\n    const [nroOfBeds, setNroOfBeds] = useState('');\r\n    const [price, setPrice] = useState('');\r\n\r\n    // Using Effect hook to continuously update and query results when search field values are changed\r\n    useEffect(()=>{\r\n        sendQueryData();\r\n    });\r\n\r\n    /*Functions*/\r\n\r\n    // Function for sending query variables to server\r\n    function sendQueryData(){\r\n        let data = {\r\n            name: name,\r\n            city: city,\r\n            country: country,\r\n            nroOfBeds: nroOfBeds,\r\n            price: price\r\n        };\r\n\r\n        socket.emit('queryData', data);\r\n        console.log(socket.id);\r\n    };\r\n\r\n    return(\r\n        <div className='sbContainer'>\r\n            <input placeholder='Name...' className='searchInput' onChange={(event) => setName(event.target.value)} />\r\n            <input placeholder='City...' className='searchInput' onChange={(event) => setCity(event.target.value)} />\r\n            <input placeholder='Country...' className='searchInput' onChange={(event) => setCountry(event.target.value)} />\r\n            <input placeholder='Nro of beds...' type ='number' className='searchInput' onChange={(event) => setNroOfBeds(event.target.value)} />\r\n            <input placeholder='Price cap ($)...' type ='number' className='searchInput' onChange={(event) => setPrice(event.target.value)} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Searchbar;\r\n","import React, {useState} from 'react';\r\nimport './ResultContainer.css';\r\n\r\nconst ResultContainer = ({socket}) =>{\r\n\r\n  const [resultData, setResultData] = useState([]);\r\n\r\n  /*Listen for events*/\r\n  socket.on('queryResults', (results)=>{\r\n    setResultData(results);\r\n  });\r\n\r\n  return(\r\n    <div id='resultContainer'>\r\n      {resultData.map((resultData)=>(\r\n        <div className='listing'>\r\n          <h2 className='listingTitle'>{resultData.name}</h2>\r\n          <h4 className='listingSubtitle'>{resultData.city} - {resultData.country}</h4>\r\n          <img className='listingImg' src={resultData.picture_url} alt='Image not found.'></img>\r\n          <h4 className='listingSubtitle'>Beds: {resultData.beds} - Price: {resultData.price}$/night</h4>\r\n          <p><b>Summary:</b> {resultData.summary}</p>\r\n          <form action={resultData.url}>\r\n            <input className='fpButton' type='submit' value='Check listing' />\r\n          </form>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );  \r\n};\r\n\r\nexport default ResultContainer;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Frontpage.css';\r\nimport io from 'socket.io-client';\r\n\r\n/*Import components*/\r\nimport Searchbar from './Searchbar/Searchbar';\r\nimport ResultContainer from './ResultContainer/ResultContainer';\r\n\r\n/*Socket initialization*/\r\nconst endpoint = 'https://vj-airbnb-reactgui.herokuapp.com/';\r\nconst socket = io.connect(`${endpoint}`);\r\n\r\nconst Frontpage = () =>(\r\n    <div id='rootFpCont'>\r\n        <div className='sidebarContainer'></div>\r\n        <div className='fpContainer'>\r\n            <h1 className='pageTitle'>Airbnb Listing DB</h1>\r\n            <h3 className='pageSubtitle'>Search the Airbnb Listing Database efficiently with real-time searches</h3>\r\n            <p className='fpParagraph'>Search through Airbnb listings and see the results of your searches as you type, no refreshing or submitting required. Manage the database by adding, updating and deleting listings in the Manage-page.</p>\r\n            <Link to={'/manage'}>\r\n                <button className='fpButton'>Manage listings</button>\r\n            </Link>\r\n            <Searchbar socket={socket}/>\r\n            <ResultContainer socket={socket} />\r\n        </div>\r\n        <div className='sidebarContainer'></div>\r\n    </div>\r\n);\r\n\r\nexport default Frontpage;","import React, {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Manage.css';\r\nimport io from 'socket.io-client';\r\n\r\n/* Socket initialization */\r\nconst endpoint = 'https://vj-airbnb-reactgui.herokuapp.com/';\r\nconst socket = io.connect(`${endpoint}`);\r\n\r\nconst Manage = () =>{\r\n\r\n    // State variables\r\n    const [id, setId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [city, setCity] = useState('');\r\n    const [country, setCountry] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [beds, setBeds] = useState('');\r\n    const [url, setUrl] = useState('');\r\n    const [pictureUrl, setPictureUrl] = useState('');\r\n\r\n    // Input object\r\n    let inputs = {\r\n        id: id,\r\n        name: name,\r\n        city: city,\r\n        country: country,\r\n        price: price,\r\n        beds: beds,\r\n        url: url,\r\n        picture_url: pictureUrl\r\n    }\r\n\r\n    // Functions\r\n\r\n    /* Function for adding a listing to database */\r\n    function addListing(){\r\n        let valid = false;\r\n        // Check empty fields\r\n        for(let i in inputs){\r\n            if(inputs[i] === ''){\r\n                alert(\"Error, can't submit empty fields. Check the inputs of the fields!\");\r\n                valid = false;\r\n                break;\r\n            };\r\n            valid = true;\r\n        };\r\n        // Emit event if all fields are valid\r\n        if(valid==true){\r\n            socket.emit('addListing', inputs);\r\n            alert(\"Listing submitted.\");\r\n            window.location.reload();\r\n        };\r\n    };\r\n\r\n    function updateListing(){\r\n        if(inputs.id === '' || inputs.id === undefined){\r\n            alert(\"Id field is empty! Add Id of the listing to update it.\");\r\n        }else{\r\n        socket.emit('updateListing', inputs);\r\n        alert(\"Update submitted!\");\r\n        window.location.reload();\r\n        }\r\n    };\r\n\r\n    function deleteListing(){\r\n        if(id){\r\n            if (window.confirm(`Are you sure you wan't to delete listing ${id}?`)){\r\n                socket.emit('deleteListing', inputs);\r\n                alert(\"Delete request sent to database.\");\r\n                window.location.reload();\r\n            };\r\n        };\r\n    };\r\n\r\nreturn(\r\n    <div id='rootManageCont'>\r\n        <div className='sidebarContainer' />\r\n        <div className='manageContainer'>\r\n            <h1>Manage Listings</h1>\r\n            <Link to={'/'}>\r\n                <button className='formButton'>Back to Homepage</button>\r\n            </Link>\r\n\r\n            <div className='formInfoCont'>\r\n                <p className='formParagraph'><b>Add listing:</b> Fill all fields to submit an entry to database. Price and nro of beds should be written in numbers.</p>\r\n                <p className='formParagraph'><b>Update listing:</b> Identify the field you want to update with Id. Fill the fields you want to update in order to update a listing. Leave other fields empty.</p>\r\n                <p className='formParagraph'><b>Delete listing:</b> To delete a listing, write the Id of the listing.</p>\r\n            </div>\r\n\r\n            <input className='formInput' name='name' placeholder='Id...' onChange={(event) => setId(event.target.value)}/>\r\n            <input className='formInput' name='name' placeholder='Name...' onChange={(event) => setName(event.target.value)}/>\r\n            <input className='formInput' name='city' placeholder='City...' onChange={(event) => setCity(event.target.value)}/>\r\n            <input className='formInput' name='country' placeholder='Country...' onChange={(event) => setCountry(event.target.value)}/>\r\n            <input className='formInput' name='price' placeholder='Price ($)...' onChange={(event) => setPrice(event.target.value)}/>\r\n            <input className='formInput' name='beds' placeholder='Nro of beds...' onChange={(event) => setBeds(event.target.value)}/>\r\n            <input className='formInput' name='url' placeholder='Listing url...' onChange={(event) => setUrl(event.target.value)}/>\r\n            <input className='formInput' name='picture_url' placeholder='Picture url...' onChange={(event) => setPictureUrl(event.target.value)}/>\r\n            <div id='formBtnCont'>\r\n                <button className='formButton' onClick={addListing}>Add listing</button>\r\n                <button className='formButton' onClick={updateListing}>Update listing</button>\r\n                <button className='formButton' onClick={deleteListing}>Delete listing</button>\r\n            </div>\r\n        </div>\r\n        <div className='sidebarContainer' />\r\n    </div>\r\n)};\r\n\r\nexport default Manage;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n/*Import components*/\nimport Frontpage from './components/Frontpage/Frontpage';\nimport Manage from './components/Manage/Manage';\n\nconst App = () => (\n  <Router>\n    <Switch>\n      <Route path='/' exact component = {Frontpage} />\n      <Route path='/manage' exact component = {Manage} />\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById ('root')\n);\n"],"sourceRoot":""}